services:
  api-application:
    image: api-application
    build:
      context: api-application
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    profiles:
      - prod

  database:
    image: postgres:17.4-alpine3.21
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: coffeebreak
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 2s

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 15433:80
    environment:
      PGADMIN_LISTEN_PORT: 80
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin/
    profiles:
      - debug

  mongodb:
    image: mongo:8.0.5
    ports:
      - "27017:27017"
    env_file:
      - .env
    volumes:
      - mongodb_data:/data/db

  keycloak:
    build:
      context: keycloak
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
    env_file:
      - .env
    ports:
      - "8443:8443"
      - "9000:9000"
    depends_on:
      keycloak-db:
        condition: service_healthy

  keycloak-db:
    image: postgres:17.4-alpine3.21
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: ${KC_DB_USERNAME}
      POSTGRES_PASSWORD: ${KC_DB_PASSWORD}
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 10s

  mq:
    image: rabbitmq:4.0.7-alpine
    container_name: mq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"

  nginx:
    image: nginx:1.27.4-alpine3.21-perl
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - api-application
      - keycloak
    profiles:
      prod

volumes:
  postgres_data:
  pgadmin_data:
  mongodb_data:
  keycloak_data:
  rabbitmq_data:
